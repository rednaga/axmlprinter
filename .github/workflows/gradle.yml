# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Run tests
      run: ./gradlew test

    - name: Generate coverage report
      run: ./gradlew jacocoTestReport

    - name: Build JAR
      run: ./gradlew jar

    - name: Extract metadata (tags, labels)
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}
        tags: |
          type=sha,format=short,prefix=

    - name: Extract short SHA for artifact name
      id: short-sha
      run: echo "sha_short=$(echo ${{ steps.meta.outputs.tags }} | cut -d: -f2)" >> $GITHUB_ENV


    - name: Upload JAR as artifact
      uses: actions/upload-artifact@v3
      with:
        name: axmlprinter-${{ env.sha_short }}
        path: build/libs/*.jar